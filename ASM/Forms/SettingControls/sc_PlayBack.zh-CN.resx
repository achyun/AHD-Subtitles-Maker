<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="checkBox_AskToDownloadFromOS.Text" xml:space="preserve">
    <value>每次改变媒体时询问是否从Opensubtitles.org下载字幕</value>
  </data>
  <data name="checkBox_AskToDownloadFromOS.ToolTip" xml:space="preserve">
    <value>如果启用, 程序会询问你每次改变媒体时是
否从Opensubtitles.org下载字幕</value>
  </data>
  <data name="checkBox_auto_generate_wave.Text" xml:space="preserve">
    <value>当我改变媒体时自动生成/显示波形.</value>
  </data>
  <data name="checkBox_auto_generate_wave.ToolTip" xml:space="preserve">
    <value>如果设置, 程序将在每次媒体更改或项目打开时
询问是否生成/显示波形.</value>
  </data>
  <data name="checkBox_scrollTimeLine.Text" xml:space="preserve">
    <value>在使用媒体控件更改时间时, 用时间轴中的 
滚动时间轴控制媒体位置.</value>
  </data>
  <data name="checkBox_wanrMeWhenMKVLoaded.Text" xml:space="preserve">
    <value>当加载Matroska媒体文件时提醒我</value>
  </data>
  <data name="checkBox_warnWhenID3Detected.Text" xml:space="preserve">
    <value>当ID3标签检测时警告我</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>新字幕持续时间</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>提前时间</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>偏移时间</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>毫秒</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>毫秒</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>毫秒</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>播放器计时器</value>
  </data>
  <data name="numericUpDown_AdvanceTime.ToolTip" xml:space="preserve">
    <value>编辑用于向前/向后按钮的时间.</value>
  </data>
  <data name="numericUpDown_NewSubtitleDuration.ToolTip" xml:space="preserve">
    <value>通过手动添加字幕时编辑新建字幕
的持续时间.</value>
  </data>
  <data name="numericUpDown_playerTimer.ToolTip" xml:space="preserve">
    <value>小的值使程序更精确但需要适当的更大的PC值对
较慢的PC可能会提高性能, 但编辑/查看字幕时
使用它会使程序失去准确性时.</value>
  </data>
  <data name="numericUpDown_ShiftTime.ToolTip" xml:space="preserve">
    <value>编辑在偏移时间对话框中使用的时间.</value>
  </data>
</root>