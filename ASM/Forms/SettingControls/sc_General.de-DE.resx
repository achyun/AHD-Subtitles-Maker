<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="checkBox_newProject.Size" type="System.Drawing.Size, System.Drawing">
    <value>391, 17</value>
  </data>
  <data name="checkBox_newProject.Text" xml:space="preserve">
    <value>Zeigen eine Neu-Projekt-Meldung an, wenn ein neues Projekt ist hergestellt.</value>
  </data>
  <data name="checkBox_newProject.ToolTip" xml:space="preserve">
    <value>Wenn aktiviert, die Neu-Project-Meldung wird angezeigt, wenn ein neues Projekt ist hergestellt.</value>
  </data>
  <data name="checkBox_askWhenChangingRTL.Size" type="System.Drawing.Size, System.Drawing">
    <value>370, 17</value>
  </data>
  <data name="checkBox_askWhenChangingRTL.Text" xml:space="preserve">
    <value>Fragen nach dem Festlegen des Recht-nach-Liks-Wert für alle Untertitel</value>
  </data>
  <data name="checkBox_askWhenChangingRTL.ToolTip" xml:space="preserve">
    <value>Wenn recht-nach-links-Alignment der Untertitel ist geändert, fragen nach die Anwenung von Rech-nach-Links Wert für alle Untertitel des Vater-Tracks</value>
  </data>
  <data name="checkBox_trackTemplate.Text" xml:space="preserve">
    <value>Untertitel-Track-Vorlage</value>
  </data>
  <data name="checkBox_trackTemplate.ToolTip" xml:space="preserve">
    <value>Wenn aktiviert, 2 neuen Untertitel werden automatich hinzufügt, wenn Sie einen neuen Untertitel-Track hinzufügen.
Diese Untertitel enthält die Über-Informationen.</value>
  </data>
  <data name="checkBox_AutoCreateTrack.Size" type="System.Drawing.Size, System.Drawing">
    <value>471, 17</value>
  </data>
  <data name="checkBox_AutoCreateTrack.Text" xml:space="preserve">
    <value>Erstellen automatisch einen neuen Untertitel-Track nach dem Herstellen eines neuen Projekts</value>
  </data>
  <data name="checkBox_AutoCreateTrack.ToolTip" xml:space="preserve">
    <value>Wenn aktiviert, erstellt das Programm für Sie einen neuen Untertitel-Track jedes Mal Sie ein neues Program hergestellen wird.</value>
  </data>
  <data name="checkBox_askToExportBeforeUpload.Size" type="System.Drawing.Size, System.Drawing">
    <value>310, 17</value>
  </data>
  <data name="checkBox_askToExportBeforeUpload.Text" xml:space="preserve">
    <value>Fragen nach dem Export der Untertitel vor dem Hochladen.</value>
  </data>
  <data name="checkBox_askToExportBeforeUpload.ToolTip" xml:space="preserve">
    <value>Wenn aktiviert, fragte das Programm jeden Mal Sie veruchen Untertitel hochzuladen ob Sie die Untertitel exportieren möchten vor dem Hochladen</value>
  </data>
  <data name="checkBox_autoSaveEnable.Size" type="System.Drawing.Size, System.Drawing">
    <value>149, 17</value>
  </data>
  <data name="checkBox_autoSaveEnable.Text" xml:space="preserve">
    <value>Auto-speichern aktivieren</value>
  </data>
  <data name="checkBox_autoSaveEnable.ToolTip" xml:space="preserve">
    <value>Wenn aktiviert, wird das Programm aktuelle Projekt bei den unten angegebenen Zeitraum automatisch zu speichern.</value>
  </data>
  <data name="checkBox_check_for_updates.Size" type="System.Drawing.Size, System.Drawing">
    <value>265, 17</value>
  </data>
  <data name="checkBox_check_for_updates.Text" xml:space="preserve">
    <value>Automatisch nach Updates (bei Programmbeginn )</value>
  </data>
  <data name="checkBox_check_for_updates.ToolTip" xml:space="preserve">
    <value>Wenn diese Option aktiviert, wird das Programm für die verfügbaren 
Versionen prüfen Online von ASM zum Download, wenn einer von
ihnen ist neuer als aktuelle installierte Version von ASM, wird es Sie 
informieren mit Details und Links zum Download bereit.</value>
  </data>
  <data name="checkBox_autoSelecteSubtitlesTrack.Size" type="System.Drawing.Size, System.Drawing">
    <value>406, 17</value>
  </data>
  <data name="checkBox_autoSelecteSubtitlesTrack.Text" xml:space="preserve">
    <value>Automatische Auswahl erster Untertitel-Track nach dem Öffnung eines Projekts</value>
  </data>
  <data name="numericUpDown_autoSavePeriod.Location" type="System.Drawing.Point, System.Drawing">
    <value>119, 187</value>
  </data>
  <data name="label1.Size" type="System.Drawing.Size, System.Drawing">
    <value>110, 13</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Dauer auto speichern</value>
  </data>
  <data name="label2.Location" type="System.Drawing.Point, System.Drawing">
    <value>205, 189</value>
  </data>
  <data name="label2.Size" type="System.Drawing.Size, System.Drawing">
    <value>45, 13</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Minuten</value>
  </data>
  <data name="$this.Size" type="System.Drawing.Size, System.Drawing">
    <value>478, 229</value>
  </data>
</root>