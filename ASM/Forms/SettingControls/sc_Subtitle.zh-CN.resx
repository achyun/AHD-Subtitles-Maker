<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="checkBox_addNewSubtitleTextWhenAddingNewSubtitle.Text" xml:space="preserve">
    <value>为新添加的字幕添加&lt;新字幕&gt;文本.</value>
  </data>
  <data name="checkBox_addNewSubtitleTextWhenAddingNewSubtitle.ToolTip" xml:space="preserve">
    <value>如果启用, 字幕编辑器(字幕属性)窗口将
添加&lt;新字幕&gt;文本以避免在添加新字幕时出
现空文本错误.</value>
  </data>
  <data name="checkBox_allowErrors.Text" xml:space="preserve">
    <value>允许字幕编辑窗口中的错误</value>
  </data>
  <data name="checkBox_allowErrors.ToolTip" xml:space="preserve">
    <value>如果启用, 字幕编辑器(字幕属性)窗口在出现
基本错误时不会禁用确定按钮.
禁用此选项可避免错误, 但有时ASM出现基本错
误时你需要重写字幕并覆盖某些重要内容.</value>
  </data>
  <data name="checkBox_askBeforeDeletingSubtitles.Text" xml:space="preserve">
    <value>删除字幕前先询问.</value>
  </data>
  <data name="checkBox_askBeforeDeletingSubtitles.ToolTip" xml:space="preserve">
    <value>如果启用, 当删除字幕以确认删除时
程序将显示消息.</value>
  </data>
  <data name="checkBox_editCreatedSubtitle.Text" xml:space="preserve">
    <value>使用快速模式编辑创建的字幕</value>
  </data>
  <data name="checkBox_editCreatedSubtitle.ToolTip" xml:space="preserve">
    <value>如果启用, 程序将显示使用快速模式创建
的新字幕的属性窗口.</value>
  </data>
  <data name="checkBox_editMoreThanOneSubtitleUsingEditor.Text" xml:space="preserve">
    <value>使用编辑器窗口编辑多个字幕</value>
  </data>
  <data name="checkBox_editMoreThanOneSubtitleUsingEditor.ToolTip" xml:space="preserve">
    <value>允许某些时候打开多个字幕属性窗口.</value>
  </data>
  <data name="checkBox_MediaSeekOnSelect.Text" xml:space="preserve">
    <value>媒体需要选择</value>
  </data>
  <data name="checkBox_MediaSeekOnSelect.ToolTip" xml:space="preserve">
    <value>如果启用, 允许寻道时间为当播放器停止
并选择字幕后已选字幕的开始时间.</value>
  </data>
  <data name="checkBox_pauseMedia.Text" xml:space="preserve">
    <value>使用快速模式暂停创建字幕后的媒体</value>
  </data>
  <data name="checkBox_pauseMedia.ToolTip" xml:space="preserve">
    <value>如果启用, 程序会在使用快速模式添
加字幕后暂停媒体.</value>
  </data>
  <data name="checkBox_seekMediaToNewSubtitleStartTimeAfterAdd.Text" xml:space="preserve">
    <value>添加使用快速模式后查询新字幕的起始时间</value>
  </data>
  <data name="checkBox_seekMediaToNewSubtitleStartTimeAfterAdd.ToolTip" xml:space="preserve">
    <value>如果启用, 程序在添加使用快速模式后
会寻求对应媒体用于新字幕的开始时间</value>
  </data>
</root>