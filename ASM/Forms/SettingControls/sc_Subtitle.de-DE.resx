<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="checkBox_seekMediaToNewSubtitleStartTimeAfterAdd.Size" type="System.Drawing.Size, System.Drawing">
    <value>486, 17</value>
  </data>
  <data name="checkBox_seekMediaToNewSubtitleStartTimeAfterAdd.Text" xml:space="preserve">
    <value>Ändern Sie Medien auf die Startzeit des neuen Untertitel nach dem Hinzufügen mit Schnellmodus</value>
  </data>
  <data name="checkBox_seekMediaToNewSubtitleStartTimeAfterAdd.ToolTip" xml:space="preserve">
    <value>Wenn aktiviert, wird das Programm die Medien auf die Startzeit des neuen Untertitels ändern nach dem Hinzufügen mit Schnellmodus.</value>
  </data>
  <data name="checkBox_pauseMedia.Size" type="System.Drawing.Size, System.Drawing">
    <value>399, 17</value>
  </data>
  <data name="checkBox_pauseMedia.Text" xml:space="preserve">
    <value>Halten Medien nach dem Erstellen eines neuen Untertitel mit Schnellmodus an.</value>
  </data>
  <data name="checkBox_pauseMedia.ToolTip" xml:space="preserve">
    <value>Wenn aktiviert, hält das Programm die Medien nach dem Hinzufügen eines neuen Untertitels mit Schnellmodus.</value>
  </data>
  <data name="checkBox_editCreatedSubtitle.ToolTip" xml:space="preserve">
    <value>Wenn aktiviert, zeigt das Programm das Eigenschaftenfenster für den neuen Untertitel an, der mit Schnellmodus erstellt war.</value>
  </data>
  <data name="checkBox_editMoreThanOneSubtitleUsingEditor.ToolTip" xml:space="preserve">
    <value>Lassen, das Öffnen von mehr als ein Fenster Untertitel Eigenschaften gleichzeitig.</value>
  </data>
  <data name="checkBox_MediaSeekOnSelect.ToolTip" xml:space="preserve">
    <value>Wenn aktiviert, erlaubt es die Zeit zu verändern auf die Startzeit des ausgewählten Untertitel, wenn der Player gestopped wird und nach dem Auswählen des Untertitels.</value>
  </data>
  <data name="checkBox_allowErrors.Size" type="System.Drawing.Size, System.Drawing">
    <value>251, 17</value>
  </data>
  <data name="checkBox_allowErrors.Text" xml:space="preserve">
    <value>Erlauben Sie Fehlern im Fenster Untertitel-Edit.</value>
  </data>
  <data name="checkBox_allowErrors.ToolTip" xml:space="preserve">
    <value>Wenn aktiviert, wird das Fenster Untertitel-Editor (Untertitel Eigenschaften) der OK taste nich deaktivieren, wenn es einen Basisfehler gibt.
Dieses Option ist deaktiviert um Fehelrn zu vermeiden, aber Sie weden manchaml brauchen die Untertiteln zu überschreiben und Überschreiben ist beim ASM als Fehler beobachtet.</value>
  </data>
  <data name="checkBox_addNewSubtitleTextWhenAddingNewSubtitle.Size" type="System.Drawing.Size, System.Drawing">
    <value>378, 17</value>
  </data>
  <data name="checkBox_addNewSubtitleTextWhenAddingNewSubtitle.Text" xml:space="preserve">
    <value>Hinzufügen &lt;Neuer Untertitel&gt; Text für neulichen hinzufügten Untertitel.</value>
  </data>
  <data name="checkBox_addNewSubtitleTextWhenAddingNewSubtitle.ToolTip" xml:space="preserve">
    <value>Wenn aktiviert, wird das Fenster Untertitel-Editor (Untertitel Eigenschaften) ein &lt;Neuer Untertitel&gt; Text hinzufügen, um Leertext Fehler zu vermeiden, wenn einen neuen Untertitel wird hinzufügt.</value>
  </data>
  <data name="checkBox_askBeforeDeletingSubtitles.Size" type="System.Drawing.Size, System.Drawing">
    <value>240, 17</value>
  </data>
  <data name="checkBox_askBeforeDeletingSubtitles.Text" xml:space="preserve">
    <value>Fragen Sie vor dem Löschen von Untertiteln.</value>
  </data>
  <data name="checkBox_askBeforeDeletingSubtitles.ToolTip" xml:space="preserve">
    <value>Wenn aktiviert, wird das Programm eine Meldung anzeigen, wenn Sie einen Untertitel löschen um das Löschen zu bestätigen.</value>
  </data>
  <data name="$this.Size" type="System.Drawing.Size, System.Drawing">
    <value>494, 198</value>
  </data>
</root>